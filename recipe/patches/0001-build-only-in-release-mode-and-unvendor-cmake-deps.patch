From d13df5ae7c0e37c0d30a991a43cae387043b3cce Mon Sep 17 00:00:00 2001
From: Andrii Osipov <aosipov@anaconda.com>
Date: Thu, 17 Apr 2025 02:35:08 -0700
Subject: [PATCH] build only in release mode and unvendor cmake deps

---
 CMakeLists.txt | 39 +++++++++++++++++++++++----------------
 setup.py       | 15 ++++++++++-----
 2 files changed, 33 insertions(+), 21 deletions(-)

diff --git a/CMakeLists.txt b/CMakeLists.txt
index 2e74346..41c6e79 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -113,23 +113,30 @@ target_sources(python
     src/py_serde.cpp
 )
 
-cmake_policy(SET CMP0097 NEW)
-include(ExternalProject)
-ExternalProject_Add(datasketches
-  GIT_REPOSITORY https://github.com/apache/datasketches-cpp.git
-  GIT_TAG 5.2.0
-  GIT_SHALLOW true
-  GIT_SUBMODULES ""
-  INSTALL_DIR /tmp/datasketches
-  CMAKE_ARGS -DBUILD_TESTS=OFF -DCMAKE_BUILD_TYPE=${CMAKE_BUILD_TYPE} -DCMAKE_INSTALL_PREFIX=/tmp/datasketches
-)
-ExternalProject_Get_property(datasketches INSTALL_DIR)
-set(datasketches_INSTALL_DIR ${INSTALL_DIR})
-message("Source dir of datasketches = ${datasketches_INSTALL_DIR}")
+# Set the path to the datasketches-cpp headers
+# This assumes the datasketches-cpp source is in ${CMAKE_SOURCE_DIR}/../datasketches-cpp
+set(DATASKETCHES_CPP_DIR "${CMAKE_SOURCE_DIR}/../datasketches-cpp")
+if(NOT EXISTS "${DATASKETCHES_CPP_DIR}")
+  message(FATAL_ERROR "datasketches-cpp source directory not found at ${DATASKETCHES_CPP_DIR}. Please check the path.")
+endif()
+
+message("Using datasketches-cpp from: ${DATASKETCHES_CPP_DIR}")
 message("Numpy include dir(s): ${Python_NumPy_INCLUDE_DIRS}")
 target_include_directories(python
   PRIVATE
-    ${datasketches_INSTALL_DIR}/include/DataSketches
+    ${DATASKETCHES_CPP_DIR}/hll/include
+    ${DATASKETCHES_CPP_DIR}/kll/include
+    ${DATASKETCHES_CPP_DIR}/cpc/include
+    ${DATASKETCHES_CPP_DIR}/fi/include
+    ${DATASKETCHES_CPP_DIR}/theta/include
+    ${DATASKETCHES_CPP_DIR}/tuple/include
+    ${DATASKETCHES_CPP_DIR}/common/include
+    ${DATASKETCHES_CPP_DIR}/sampling/include
+    ${DATASKETCHES_CPP_DIR}/req/include
+    ${DATASKETCHES_CPP_DIR}/quantiles/include
+    ${DATASKETCHES_CPP_DIR}/density/include
+    ${DATASKETCHES_CPP_DIR}/count/include
+    ${DATASKETCHES_CPP_DIR}/tdigest/include
     ${Python_NumPy_INCLUDE_DIRS}
-    )
-add_dependencies(python datasketches Python::NumPy)
+)
+add_dependencies(python Python::NumPy)
diff --git a/setup.py b/setup.py
index fdb7c2f..9040388 100644
--- a/setup.py
+++ b/setup.py
@@ -51,25 +51,30 @@ class CMakeBuild(build_ext):
         # ensure we use a consistent python version
         #cmake_args += ['-DPython3_EXECUTABLE=' + sys.executable]
         cmake_args += ['-DPython_EXECUTABLE=' + sys.executable]
-        cfg = 'Debug' if self.debug else 'Release'
+        cfg = 'Release'
+        cmake_args += ['-DCMAKE_BUILD_TYPE=' + cfg]
         build_args = ['--config', cfg]
 
         if platform.system() == "Windows":
+            # Add Ninja generator during configuration
+            cmake_args += ['-G', 'Ninja']
             cmake_args += ['-DCMAKE_LIBRARY_OUTPUT_DIRECTORY_{}={}'.format(
                            cfg.upper(),
                            extdir)]
             if sys.maxsize > 2**32:
-                cmake_args += ['-T', 'host=x64']
-                cmake_args += ['-DCMAKE_GENERATOR_PLATFORM=x64']
-                build_args += ['--', '/m']
+                build_args += ['--', '-j', '2']
         else:
-            cmake_args += ['-DCMAKE_BUILD_TYPE=' + cfg]
             build_args += ['--', '-j2']
 
         env = os.environ.copy()
         env['CXXFLAGS'] = '{} -DVERSION_INFO=\\"{}\\"'.format(
             env.get('CXXFLAGS', ''),
             self.distribution.get_version())
+
+        # Ensure proper C++17 support for MSVC
+        if platform.system() == "Windows":
+            env['CXXFLAGS'] = '{} /std:c++17 /Zc:__cplusplus'.format(env.get('CXXFLAGS', ''))
+               
         if not os.path.exists(self.build_temp):
             os.makedirs(self.build_temp)
         subprocess.check_call(['cmake', ext.sourcedir] + cmake_args,
-- 
2.39.3 (Apple Git-146)

